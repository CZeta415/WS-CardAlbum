document.addEventListener('DOMContentLoaded',()=>{const activationOverlay=document.getElementById('activation-overlay');const activationText=document.getElementById('activation-text');const initialDeckContainer=document.getElementById('initial-deck-container');const initialDeck=document.getElementById('initial-deck');const cardGallery=document.getElementById('card-gallery');const searchBox=document.getElementById('search-box');const noResultsMessage=document.getElementById('no-results-message');const discordLink=document.getElementById('discord-link');const settingsToggleBtn=document.getElementById('settings-toggle-btn');const settingsPanel=document.getElementById('settings-panel');const changelogBtn=document.getElementById('changelog-btn');const collabBtn=document.getElementById('collab-btn');const collabPanel=document.getElementById('collab-panel');const modalOverlay=document.getElementById('modal-overlay');const changelogModal=document.getElementById('changelog-modal');const cardViewModal=document.getElementById('card-view-modal');const allPanels=document.querySelectorAll('.settings-panel, .collab-panel');let appData={};let fuse;let visibleCards=[];let currentCardIndex=-1;let pactOfTheDayId=-1;let activeModal=null;let audioContext;const audioBuffers={};const audioSources={deal:'assets/sounds/CardRep.mp3',flip:'assets/sounds/Flip.mp3',roll:'assets/sounds/CardRoll.mp3',logS:'assets/sounds/LogS.mp3',button:'assets/sounds/button.mp3',};let settings={themeColor:'#dcbaff',cardBack:'default',masterVolume:0.7,mutedSounds:[],seenCards:[]};async function init(){try{const response=await fetch('app_data.json');if(!response.ok)throw new Error('No se pudieron cargar los datos.');appData=await response.json();setupActivation()}catch(error){activationText.textContent='Error al cargar los pactos.';console.error(error)}}
function setupActivation(){activationText.textContent='Listo para el pacto.';activationOverlay.addEventListener('click',activateApp,{once:!0})}
async function activateApp(){activationOverlay.classList.add('hidden');document.body.classList.remove('no-scroll');audioContext=new(window.AudioContext||window.webkitAudioContext)();await preloadAudio();setupVisitorCounter();loadSettings();applySettings();calculatePactOfTheDay();setupEventListeners();initializeFuse()}
function calculatePactOfTheDay(){const date=new Date();const seed=date.getFullYear()*1000+date.getMonth()*100+date.getDate();if(appData.cards&&appData.cards.length>0){pactOfTheDayId=(seed%appData.cards.length)+1}}
function dealCards(){playSound('deal');initialDeckContainer.classList.add('hidden');searchBox.disabled=!1;displayCards(appData.cards)}
function displayCards(cards){visibleCards=cards;cardGallery.innerHTML='';if(cards.length===0){noResultsMessage.classList.remove('hidden');return}
noResultsMessage.classList.add('hidden');const fragment=document.createDocumentFragment();cards.forEach((card,index)=>{const cardEl=createCardElement(card,index);cardEl.style.animationDelay=`${index * 50}ms`;fragment.appendChild(cardEl)});cardGallery.appendChild(fragment)}
function createCardElement(card,index){const cardContainer=document.createElement('div');cardContainer.className='card-container';const isSeen=settings.seenCards.includes(card.id);if(isSeen)cardContainer.classList.add('seen','flipped');if(card.id===pactOfTheDayId)cardContainer.classList.add('pact-of-the-day');cardContainer.dataset.id=card.id;const cardBackImage=getCardBackUrl(index);const cardFrontImage=`assets/cards/card_${card.id}.webp`;cardContainer.innerHTML=`
            <div class="card-inner">
                <div class="card-face card-back" style="background-image: url('${cardBackImage}')">
                    <span class="card-back-prompt">${appData.ui_text.identify_prompt}</span>
                </div>
                <div class="card-face card-front" style="--card-front-image: url('${cardFrontImage}')">
                    <div class="card-front-content">
                         <h3 class="card-title">${card.title}</h3>
                    </div>
                </div>
            </div>`;const imgTest=new Image();imgTest.src=cardFrontImage;imgTest.onerror=()=>{cardContainer.querySelector('.card-front').style.setProperty('--card-front-image',"url('assets/noise.webp')")};return cardContainer}
function getCardBackUrl(index){if(settings.cardBack==='default'){const backs=['assets/card_back/card_back.webp','assets/card_back/card_back2.webp','assets/card_back/card_back3.webp'];return backs[index%backs.length]}
return settings.cardBack}
function handleCardClick(cardEl){const cardId=parseInt(cardEl.dataset.id,10);const isAlreadyFlipped=cardEl.classList.contains('flipped');if(!isAlreadyFlipped){playSound('flip');cardEl.classList.add('seen','flipped');if(!settings.seenCards.includes(cardId)){settings.seenCards.push(cardId);saveSettings()}}
const openDelay=isAlreadyFlipped?0:700;setTimeout(()=>openCardViewModal(cardId),openDelay)}
function initializeFuse(){fuse=new Fuse(appData.cards,{keys:['title'],threshold:0.4})}
function handleSearch(){const query=searchBox.value.trim();const results=query?fuse.search(query).map(result=>result.item):appData.cards;displayCards(results)}
function openModal(modal){closeAllPopups();activeModal=modal;modal.classList.add('visible');modalOverlay.classList.add('visible');document.body.classList.add('no-scroll')}
function closeModal(){if(activeModal){activeModal.classList.remove('visible');activeModal=null}
modalOverlay.classList.remove('visible');document.body.classList.remove('no-scroll')}
function closeAllPopups(){closeModal();allPanels.forEach(p=>p.classList.remove('visible'))}
function showChangelog(){playSound('logS');const{version,changes}=appData.changelog;changelogModal.innerHTML=`
            <button class="corner-btn close-modal-btn" aria-label="Cerrar">X</button>
            <h2>Registro de Cambios (${version})</h2>
            <ul>
                ${changes.map(change => `<li>${change}</li>`).join('')}
            </ul>`;openModal(changelogModal);changelogModal.querySelector('.close-modal-btn').addEventListener('click',()=>{playSound('button');closeModal()})}
function showCollabPanel(){playSound('logS');settingsPanel.classList.remove('visible');const hasCollabs=appData.collaborators&&appData.collaborators.length>0;let content=hasCollabs?`<h4>Agradecimientos</h4><ul>${appData.collaborators.map(c => `<li>${c}</li>`).join('')}</ul>`:`<h4>¡Forma Parte del Grimorio!</h4><p>Únete a nuestra comunidad de Discord para sugerir cambios y convertirte en colaborador.</p>`;collabPanel.innerHTML=content;collabPanel.style.right=`${settingsToggleBtn.offsetWidth + changelogBtn.offsetWidth + 20}px`;collabPanel.classList.toggle('visible')}
function openCardViewModal(cardId){playSound('roll');currentCardIndex=visibleCards.findIndex(c=>c.id===cardId);if(currentCardIndex===-1)return;updateCardViewModal();openModal(cardViewModal)}
function updateCardViewModal(){const card=visibleCards[currentCardIndex];const cardImage=document.getElementById('card-view-image');document.getElementById('card-view-title').textContent=card.title;document.getElementById('card-view-description').innerHTML=card.description;const cardImagePath=`assets/cards/card_${card.id}.webp`;const testImg=new Image();testImg.src=cardImagePath;testImg.onload=()=>cardImage.src=cardImagePath;testImg.onerror=()=>cardImage.src='assets/noise.webp';cardImage.alt=card.title}
function navigateCard(direction){playSound('roll');currentCardIndex+=direction;if(currentCardIndex<0)currentCardIndex=visibleCards.length-1;if(currentCardIndex>=visibleCards.length)currentCardIndex=0;updateCardViewModal()}
async function setupVisitorCounter(){const counterElement=document.getElementById('visitor-count');const counterContainer=document.getElementById('visitor-counter');const toggleButton=document.getElementById('visitor-counter-toggle');const apiUrl='https://api.counterapi.dev/v1/grimorio-muerte/pactos/up';counterElement.textContent="Cargando...";try{const response=await fetch(apiUrl);if(!response.ok)throw new Error('Contador no disponible');const data=await response.json();counterElement.textContent=data.count.toLocaleString('es-ES')}catch(error){console.error("Error al cargar el contador:",error);counterContainer.style.display='none'}
toggleButton.addEventListener('click',(e)=>{e.stopPropagation();playSound('button');counterContainer.classList.toggle('hidden')})}
function loadSettings(){const savedSettings=JSON.parse(localStorage.getItem('grimorioSettingsV2'));if(savedSettings){settings={...settings,...savedSettings}}}
function saveSettings(){localStorage.setItem('grimorioSettingsV2',JSON.stringify(settings))}
function applySettings(){document.documentElement.style.setProperty('--theme-accent-color',settings.themeColor);document.querySelectorAll('.color-swatch').forEach(sw=>{sw.classList.toggle('selected',sw.dataset.color===settings.themeColor)});document.querySelectorAll('.card-back-option').forEach(opt=>{opt.classList.toggle('selected',opt.dataset.back===settings.cardBack)});document.getElementById('master-volume-slider').value=settings.masterVolume;document.querySelectorAll('#sound-mute-toggles input').forEach(toggle=>{toggle.checked=settings.mutedSounds.includes(toggle.dataset.sound)});if(cardGallery.innerHTML)displayCards(visibleCards);}
function resetSettings(){if(confirm('¿Seguro que quieres borrar todos los ajustes y el progreso? Esta acción no se puede deshacer.')){localStorage.removeItem('grimorioSettingsV2');window.location.reload()}}
function clearSeenCards(){if(confirm('¿Quieres volver a sellar todos los pactos (cartas reveladas)?')){settings.seenCards=[];saveSettings();window.location.reload()}}
async function loadAudio(name,url){try{const response=await fetch(url);const arrayBuffer=await response.arrayBuffer();audioBuffers[name]=await audioContext.decodeAudioData(arrayBuffer)}catch(error){console.error(`Error al cargar el audio ${name}:`,error)}}
async function preloadAudio(){const promises=Object.entries(audioSources).map(([name,url])=>loadAudio(name,url));await Promise.all(promises)}
function playSound(name){if(!audioContext||audioContext.state==='suspended')audioContext.resume();if(!audioBuffers[name]||settings.mutedSounds.includes(name))return;const source=audioContext.createBufferSource();source.buffer=audioBuffers[name];const gainNode=audioContext.createGain();gainNode.gain.value=settings.masterVolume;source.connect(gainNode).connect(audioContext.destination);source.start(0)}
function setupEventListeners(){initialDeck.addEventListener('click',dealCards,{once:!0});searchBox.addEventListener('input',handleSearch);discordLink.addEventListener('click',()=>playSound('button'));cardGallery.addEventListener('click',(e)=>{const cardElement=e.target.closest('.card-container');if(cardElement)handleCardClick(cardElement);});document.addEventListener('click',(e)=>{if(!settingsPanel.contains(e.target)&&!settingsToggleBtn.contains(e.target)&&!collabPanel.contains(e.target)&&!collabBtn.contains(e.target)){closeAllPopups()}});modalOverlay.addEventListener('click',()=>{playSound('button');closeModal()});cardViewModal.querySelector('.close-modal-btn').addEventListener('click',()=>{playSound('button');closeModal()});document.getElementById('prev-card-btn').addEventListener('click',e=>{e.stopPropagation();navigateCard(-1)});document.getElementById('next-card-btn').addEventListener('click',e=>{e.stopPropagation();navigateCard(1)});document.addEventListener('keydown',(e)=>{if(activeModal===cardViewModal){if(e.key==='ArrowLeft')navigateCard(-1);if(e.key==='ArrowRight')navigateCard(1);}
if(e.key==='Escape')closeModal();});changelogBtn.addEventListener('click',e=>{e.stopPropagation();showChangelog()});collabBtn.addEventListener('click',e=>{e.stopPropagation();showCollabPanel()});settingsToggleBtn.addEventListener('click',e=>{e.stopPropagation();collabPanel.classList.remove('visible');playSound('button');settingsPanel.classList.toggle('visible')});document.getElementById('theme-color-selector').addEventListener('click',e=>{if(e.target.matches('.color-swatch')){settings.themeColor=e.target.dataset.color;playSound('button');applySettings();saveSettings()}});document.getElementById('card-back-selector').addEventListener('click',e=>{if(e.target.matches('.card-back-option')){settings.cardBack=e.target.dataset.back;playSound('button');applySettings();saveSettings()}});document.getElementById('master-volume-slider').addEventListener('input',e=>{settings.masterVolume=parseFloat(e.target.value)});document.getElementById('master-volume-slider').addEventListener('change',()=>{playSound('button');saveSettings()});document.getElementById('sound-mute-toggles').addEventListener('change',e=>{if(e.target.matches('input[type="checkbox"]')){const soundName=e.target.dataset.sound;if(e.target.checked)settings.mutedSounds.push(soundName);else settings.mutedSounds=settings.mutedSounds.filter(s=>s!==soundName);saveSettings()}});document.getElementById('reset-settings-btn').addEventListener('click',resetSettings);document.getElementById('clear-seen-btn').addEventListener('click',clearSeenCards)}
init()})